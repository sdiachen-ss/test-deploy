name: Mono repo

trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

stages:
- stage: CheckoutStage

  displayName: 'Checkout and analysis'
  jobs:
  - job: CheckoutJob
    pool:
      vmImage: ubuntu-latest
    steps:
    - checkout: self

    - script: echo Checkout

    - bash: |
        echo '##vso[task.setvariable variable=UserSyncChanged;isOutput=true;]False'
        echo '##vso[task.setvariable variable=AnalyticsSpaChanged;isOutput=true;]True'
      displayName: Set changed Files
      name: find_changed_areas

    - bash: |
        echo find_changed_areas.UserSyncChanged: 
        echo $(find_changed_areas.UserSyncChanged)

    - bash: |
        echo find_changed_areas.AnalyticsSpaChanged: 
        echo $(find_changed_areas.AnalyticsSpaChanged)

    - pwsh: |
        echo "# Env file for passing data" | Out-File -FilePath $(Build.ArtifactStagingDirectory)/changed_areas/changes.env
        echo "##vso[task.setvariable variable=UserSyncChanged;]$(find_changed_areas.UserSyncChanged)" | Out-File -FilePath $(Build.ArtifactStagingDirectory)/changed_areas/changes.env -Append
        echo "##vso[task.setvariable variable=AnalyticsSpaChanged;]$(find_changed_areas.AnalyticsSpaChanged)" | Out-File -FilePath $(Build.ArtifactStagingDirectory)/changed_areas/changes.env -Append

    - task: PublishBuildArtifacts@1
      inputs:
       pathToPublish: '$(Build.ArtifactStagingDirectory)/changed_areas'
       artifactName: changed_areas

- stage: UserSync_DeployStage
  dependsOn: CheckoutStage
  displayName: 'Sync: Stage deploy'
  jobs:
  - job: 'Deploy'
    condition: eq(stageDependencies.CheckoutStage.CheckoutJob.outputs['find_changed_areas.UserSyncChanged'], true)
    pool:
      vmImage: ubuntu-latest
    steps:
    - script: echo Deployed
